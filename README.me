# 🌿 E-Plant Shopping

<div align="center">
  
![React](https://img.shields.io/badge/React-20232A?style=for-the-badge&logo=react&logoColor=61DAFB)
![Redux](https://img.shields.io/badge/Redux-593D88?style=for-the-badge&logo=redux&logoColor=white)
![JavaScript](https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black)
![CSS3](https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&logo=css3&logoColor=white)
![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg?style=for-the-badge)

**A modern, responsive e-commerce platform for plant enthusiasts**

[Live Demo](#) · [Report Bug](https://github.com/Raine040/e-plantShopping/issues) · [Request Feature](https://github.com/Raine040/e-plantShopping/issues)

</div>

---

## 📋 Table of Contents

- [About The Project](#about-the-project)
- [Features](#features)
- [Tech Stack](#tech-stack)
- [Getting Started](#getting-started)
  - [Prerequisites](#prerequisites)
  - [Installation](#installation)
  - [Running the Application](#running-the-application)
- [Project Structure](#project-structure)
- [Usage](#usage)
- [Screenshots](#screenshots)
- [Contributing](#contributing)
- [License](#license)
- [Contact](#contact)
- [Acknowledgments](#acknowledgments)

---

## 🌱 About The Project

E-Plant Shopping is a full-featured e-commerce web application built with React and Redux, designed specifically for buying and selling plants online. This project was developed as part of the IBM React Final Project, demonstrating modern web development practices and state management techniques.

The application provides a seamless shopping experience where users can browse through various categories of plants, add items to their cart, manage quantities, and proceed through a streamlined checkout process.

### Why This Project?

- 🛒 **Complete Shopping Experience**: Browse, filter, and purchase plants with ease
- 🎨 **Modern UI/UX**: Clean, intuitive interface with responsive design
- ⚡ **State Management**: Efficient Redux implementation for cart and product management
- 📱 **Mobile Friendly**: Fully responsive design that works on all devices
- 🔧 **Maintainable Code**: Well-structured, component-based architecture

---

## ✨ Features

### Core Functionality

- 🏪 **Product Catalog**
  - Browse extensive collection of plants
  - Filter by category (Air Purifying, Aromatic, Medicinal, Low Maintenance, etc.)
  - Detailed product information with images and descriptions
  - Price display and availability status

- 🛒 **Shopping Cart**
  - Add/remove items with smooth animations
  - Update quantities dynamically
  - Real-time price calculation
  - Persistent cart state using Redux
  - Visual cart indicators and item count

- 🎯 **User Experience**
  - Responsive navigation
  - Category-based filtering
  - Quick add-to-cart functionality
  - Intuitive product cards
  - Landing page with featured products

- 💳 **Checkout Process**
  - Cart review and modification
  - Order summary
  - Continue shopping option
  - Clean checkout interface

### Technical Features

- ⚛️ Component-based architecture
- 🔄 Redux state management
- 🎨 CSS modules for styling
- 📦 Modular code structure
- 🚀 Optimized performance

---

## 🛠️ Tech Stack

### Frontend Framework
- **React** - Component-based UI library
- **Redux** - State management
- **React-Redux** - Official React bindings for Redux
- **React Router** - Navigation and routing

### Development Tools
- **Create React App** - Build tooling
- **JavaScript (ES6+)** - Programming language
- **CSS3** - Styling
- **Git** - Version control

---

## 🚀 Getting Started

Follow these steps to get a local copy up and running.

### Prerequisites

Before you begin, ensure you have the following installed:

- **Node.js** (v14.0.0 or higher)
  ```bash
  node --version
  ```

- **npm** (v6.0.0 or higher)
  ```bash
  npm --version
  ```

### Installation

1. **Clone the repository**
   ```bash
   git clone https://github.com/Raine040/e-plantShopping.git
   ```

2. **Navigate to project directory**
   ```bash
   cd e-plantShopping
   ```

3. **Install dependencies**
   ```bash
   npm install
   ```

### Running the Application

1. **Start the development server**
   ```bash
   npm start
   ```

2. **Open your browser**
   
   Navigate to `http://localhost:3000`

3. **Build for production**
   ```bash
   npm run build
   ```
   
   Creates an optimized production build in the `build` folder.

---

## 📁 Project Structure

```
e-plantShopping/
├── public/
│   ├── index.html
│   └── favicon.ico
├── src/
│   ├── components/
│   │   ├── AboutUs.jsx
│   │   ├── CartItem.jsx
│   │   ├── LandingPage.jsx
│   │   ├── Navbar.jsx
│   │   ├── ProductList.jsx
│   │   └── ...
│   ├── store/
│   │   └── CartSlice.jsx
│   ├── styles/
│   │   ├── AboutUs.css
│   │   ├── CartItem.css
│   │   ├── LandingPage.css
│   │   ├── Navbar.css
│   │   ├── ProductList.css
│   │   └── ...
│   ├── App.js
│   ├── index.js
│   └── store.js
├── package.json
├── README.md
└── .gitignore
```

### Key Directories

- **`/components`** - React components for UI elements
- **`/store`** - Redux slices and state management logic
- **`/styles`** - CSS files for component styling

---

## 💡 Usage

### Browsing Products

1. Navigate to the Products page from the navigation bar
2. Browse through different plant categories
3. View detailed information by clicking on product cards

### Adding to Cart

1. Click the "Add to Cart" button on any product
2. Adjust quantities using the increment/decrement buttons
3. View your cart by clicking the cart icon in the navigation

### Managing Cart

1. Review items in your cart
2. Update quantities or remove items
3. See real-time total price updates
4. Proceed to checkout when ready

### Filtering Products

1. Use category buttons to filter plants
2. Reset filters to view all products
3. Combine filters for specific searches

---

## 📸 Screenshots

### Landing Page
Beautiful hero section with featured plants and call-to-action buttons.

### Product Catalog
Grid layout showcasing various plants with images, descriptions, and pricing.

### Shopping Cart
Clean interface showing selected items with quantity controls and checkout options.

---

## 🤝 Contributing

Contributions are what make the open-source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.

### How to Contribute

1. **Fork the Project**
2. **Create your Feature Branch**
   ```bash
   git checkout -b feature/AmazingFeature
   ```
3. **Commit your Changes**
   ```bash
   git commit -m 'Add some AmazingFeature'
   ```
4. **Push to the Branch**
   ```bash
   git push origin feature/AmazingFeature
   ```
5. **Open a Pull Request**

### Contribution Ideas

- 🎨 Improve UI/UX design
- 🐛 Fix bugs and issues
- 📝 Enhance documentation
- ✨ Add new features (user authentication, payment integration, etc.)
- 🧪 Write tests
- ♿ Improve accessibility

---

## 📄 License

Distributed under the Apache License 2.0. See `LICENSE` file for more information.

---

## 👤 Contact

**Raine040**

- GitHub: [@Raine040](https://github.com/Raine040)
- Project Link: [https://github.com/Raine040/e-plantShopping](https://github.com/Raine040/e-plantShopping)

---

## 🙏 Acknowledgments

This project was developed as part of the **IBM React Final Project**. Special thanks to:

- [React Documentation](https://reactjs.org/)
- [Redux Documentation](https://redux.js.org/)
- [IBM Skills Network](https://skills.network/)
- All contributors and supporters of this project

---

<div align="center">

### ⭐ If you find this project useful, please consider giving it a star!

Made with ❤️ and React

</div>
